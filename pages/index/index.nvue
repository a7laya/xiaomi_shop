<template>
	<div>
		<!-- 选项卡组件 --> 
		<sum-tabbar :tabBars="tabBars" :tabIndex="tabIndex" @changetab="changeTab"></sum-tabbar>
		<slider class="flex-1 w-100" @change="changeSlider" :index="tabIndex" infinite="false">
			<list show-scrollbar="false" v-for="(list, listIndex) in newsItems" :key="listIndex">
				
				<!-- 下拉刷新 -->
				<refresh @refresh="refresh"  @pullingdown="pullingdown"
				class="w-100 flex-row j-center a-center" 
				style="height: 88px;"
				:display="list.refreshShow">
					<text class="font-md text-light-muted">{{list.refreshText}}</text>
				</refresh>
				<template v-if="list.data.length > 0">
					<!-- 首页模版 -->
					<template v-if="tabBars[listIndex].template === 'index'">
						<cell v-for="(listItem, itemIndex) in list.data" :key="itemIndex">
							<!-- 轮播图组件 -->
							<sum-slider v-if="listItem.type === 'swiper'" :swipers="listItem.data"></sum-slider>
							
							<!-- 首页小图标导航组件 -->
							<template v-if="listItem.type === 'indexnavs'">
								<sum-index-navs :indexNavs='listItem.data'></sum-index-navs>
								<divider></divider>
							</template>
							
							<!-- 三图广告 -->
							<template v-if="listItem.type === 'threeAdv'">
								<sum-three-adv :resData='listItem.data'></sum-three-adv>
								<divider></divider>
							</template>
							
							<!-- 大图广告 -->
							<template v-if="listItem.type === 'oneAdv'">
								<sum-one-adv :resData="listItem.data"></sum-one-adv>
								<divider></divider>
							</template>
							
							<!-- 公共列表组件 -->
							<common-list v-if="listItem.type === 'list'" :resData="listItem.data"></common-list>
							
						</cell>
					</template>
					
					<!-- 专题页模版 -->
					<template v-else-if="tabBars[listIndex].template == 'special'">
							<cell v-for="(listItem, itemIndex) in list.data" :key="itemIndex">
								<!-- 轮播图组件 -->
								<sum-slider v-if="listItem.type === 'swiper'" :swipers="listItem.data"></sum-slider>
								
								<!-- 首页小图标导航组件 -->
								<template v-if="listItem.type === 'indexnavs'">
									<sum-index-navs :indexNavs='listItem.data'></sum-index-navs>
								</template>
								
								<!-- 公共列表组件 -->
								<common-list v-if="listItem.type === 'list'" :resData="listItem.data"></common-list>
								
							</cell>
					</template>
				</template>
				<template v-else>
					<cell class="a-center j-center h-100">
						<text class="text-light-muted">{{pageStatus}}</text> 
					</cell>
				</template>
				
				
				
				<!-- 上拉加载 -->
				<loading @loading="onLoading" :display="list.loadingShow"
				class="w-100 flex-row a-center j-center"
				style="height: 70px;">
					<text class="font-md text-light-muted">{{list.loadingText}}</text>
				</loading>
			</list>
		</slider>
	</div>
</template>

<script>
	// 引入请求
	import $H           from "@/common/lib/request.js"
	
	import sumSlider    from "@/components/index/nvue/sum-slider"
	import sumIndexNavs from "@/components/index/nvue/sum-index-navs"
	import divider      from "@/components/common/nvue/divider"
	import sumThreeAdv  from "@/components/index/nvue/sum-three-adv"
	import sumOneAdv    from "@/components/index/nvue/sum-one-adv"
	import price        from "@/components/common/nvue/price"
	import commonList   from "@/components/common/nvue/common-list"
	import sumTabbar    from "@/components/index/nvue/sum-tabbar"

	
	// 监听当前窗口显示, 相当于uniapp中 show 的生命周期
	const currentWebview = plus.webview.currentWebview();
	
	export default {
		components: {
			sumSlider,
			sumIndexNavs,
			divider,
			sumThreeAdv,
			sumOneAdv,
			price,
			commonList,
			sumTabbar
		},
		data() {
			return {
				newsItems: [],
				tabIndex: 0,
				tabBars: [],
				pageStatus: '...'
				}
		},
		// created 相当于 onLoad
		created() {
			// 初始化数据
			this.__init()
			
			// 监听当前窗口显示, 相当于uniapp中 show 的生命周期
			currentWebview.addEventListener('show', e => {
			})
			
			// 监听搜索框点击事件
			uni.onNavigationBarSearchInputClicked(()=>{
				uni.navigateTo({
					url:'../search/search'
				})
			})
			// 监听导航栏按钮点击事件
			uni.onNavigationBarButtonTap(e=>{
				// 点击了左边的按钮
				if(e.index === 0) uni.navigateTo({
					url: '../search-list/search-list'
				})
			})
		},
		beforeDestroy() {
			// 移除窗口显示监听事件
			currentWebview.removeEventListener('show', e => {});
		},
		methods: {
			// 初始化
			async __init(){
				// // 第三种形式 Await（promise升级版）
				// let [error, result] = await uni.request({
				// 	url: 'http://ceshi3.dishait.cn/api/index_category/data',
				// 	method: 'GET', 
				// })	
				// // 网络错误
				// if(error) {
				// 	return uni.showToast({
				// 		title: error.errMsg,
				// 		icon: 'none'
				// 	});
				// }
				// // 路由失败
				// if(result.statusCode !== 200) {
				// 	return uni.showToast({
				// 		title: result.data.msg,
				// 		icon: 'none'
				// 	}); 
				// }
				// // 成功
				// let data = result.data.data
				
				$H.get('/index_category/data').then(data => {
					// 初始化tabBars
					this.tabBars = data.category
					// 根据tabBars初始化页面
					this.newsItems = this.setNewsItems(data.data)
				})
				
			},
			// 加载/刷新数据
			async addData(callback = false, refresh = false){
				let index = this.tabIndex
				// 拿到分类id
				let id = this.tabBars[index].id
				// 拿到分类页码 每页是5条数据  向上取整+1
				let page = !refresh ? Math.ceil(this.newsItems[index].data.length/5) + 1 : 1
				 console.log(`page: ${page}`);
				 
				let data = await $H.get('/index_category/'+id+'/data/'+page)
				
				// 更改加载状态
				this.newsItems[index].firstLoad = false
				
				if(!data) return

				// 渲染
				this.newsItems[index].data = !refresh ? [...this.newsItems[index].data,...data] : [...data]
				// 执行回调函数
				if(typeof(callback) === 'function') {
					callback()
				}
				// 暂无数据
				this.pageStatus = '暂无数据'
				// 没有更多了
				if (data.length < 5) {
					this.newsItems[index].loadingText = '没有更多了'
					return
				}
			},
			// 上拉加载更多
			onLoading(){  
				// 获取当前索引
				let index = this.tabIndex
				this.newsItems[index].loadingShow = 'show'
				 
				this.addData(()=>{
					this.newsItems[index].loadingShow = 'hide'
				})
			},
			// 点击tabBars
			changeTab(index) {
				this.tabIndex = index
			},
			// 滑动tabBars
			changeSlider(e) {
				// this.changeTab(e.index)
				this.tabIndex = e.index 
				if(!this.newsItems[this.tabIndex].firstLoad) return
				this.addData()
			},
			
			// 执行刷新
			refresh (e) {
				// 获取当前索引
				let index = this.tabIndex
				this.newsItems[index].refreshShow = 'show'
				this.newsItems[index].refreshText = '正在刷新'
				this.addData(() => {
					this.newsItems[index].refreshShow = 'hide'
					this.newsItems[index].refreshText = '下拉可以刷新'
				}, true);   
			},
			// 判断下拉刷新状态 - 下拉程度
			pullingdown(e){
				// 获取当前索引
				let index = this.tabIndex
				if(e.pullingDistance > e.viewHeight) {
					this.newsItems[index].refreshText = '释放就能刷新'
				} else {
					this.newsItems[index].refreshText = '下拉可以刷新'
				}
			},
			// 根据tabBars初始化页面数据
			setNewsItems(data) {
					let arry = [];
					let length = this.tabBars.length;
					for (let i = 0; i < length; i++) {
						let firstLoad = i === 0 ? false : true
						let arryItem = {
							refreshShow: 'hide',
							refreshText: '下拉可以刷新',
							loadingShow: 'hide',
							loadingText: '上拉加载更多',
							data: [],
							firstLoad: firstLoad
						};
						// 给页面添加数据 - 首屏
						if (this.tabBars[i].template === 'index'){
							arryItem.data = data
						} 
						arry.push(arryItem);
					}
					
					return arry;
				}
			
		}
	}
</script>

<style src="@/common/zcm-main-nvue.css"></style>
<style>

</style>
